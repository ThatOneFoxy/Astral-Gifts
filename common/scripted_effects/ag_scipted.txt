ag_destroy_star_system = {
    set_star_flag = ag_rifted
    set_star_class = sc_rift_star
    every_system_ambient_object = {
        limit = {
            # Preserve Unbidden crisis effects
            NOR = {
                has_ambient_object_flag = extradimensional_system_effect
                has_ambient_object_flag = extradimensional_system_effect_2
            }
        }
        destroy_ambient_object = this
    }
    solar_system = {
        create_ambient_object = {
            type = nebula_3
            play_animation_once = yes
            location = this
        }
    }

    every_system_planet = {
        limit = { is_star = yes }
        create_ambient_object = {
            type = "shroud_rift_object"
            play_animation_once = yes
            location = this
        }
        last_created_ambient_object = {
            set_location = {
                target = prev
                distance = 0
                angle = random
            }
        }
        change_pc = pc_rift_star
    }
    # Handle Contingency Machine Worlds
    every_system_planet = {
        limit = {
            is_planet_class = pc_ai
            NOT = { has_planet_flag = machine_lair }
        }
        destroy_machine_world = yes
    }
    random_system_planet = {
        limit = {
            is_planet_class = pc_ai
            has_planet_flag = machine_lair
        }
        from.owner = { save_event_target_as = final_machine_world_destroyer }
        stop_crisis_sound = yes
        planet_event = { id = crisis.2046 }
    }
    every_system_planet = {
        limit = {
            is_colony = no
            is_star = no
            is_asteroid = no
            NOR = {
                is_planet_class = pc_shattered
                is_planet_class = pc_shattered_2
                is_planet_class = pc_shielded
                is_planet_class = pc_ringworld_habitable_damaged
                is_planet_class = pc_ringworld_tech_damaged
                is_planet_class = pc_ringworld_seam_damaged
            }
        }
        if = {
            limit = { is_planet_class = pc_habitat } # uncolonized
            spawn_habitat_cracker_effect = yes
        }
        if = {
            limit = {
                AND = {
                    is_colony = yes
                    not = {
                        has_building = building_planetary_shield_generator
                    }
                }
            }
            if = {
                limit = {
                    exists = orbital_defence
                }
                destroy_fleet = orbital_defence
            }
            if = {
                limit = {
                    and = {
                        is_planet_class = pc_habitat
                    }
                    NOT = {
                        has_building = building_planetary_shield_generator
                    }
                }
                spawn_habitat_cracker_effect = yes
            }
            else_if = {
                limit = {
                    and = {
                        is_ringworld = yes
                        NOT = {
                            has_building = building_planetary_shield_generator
                        }
                    }
                }
                spawn_ringworld_cracker_effect = yes
                change_pc = pc_ringworld_habitable_damaged
            }
            else = {
                change_pc = pc_shattered
            }
        }
        else_if = {
            limit = { is_ringworld = yes }
            spawn_ringworld_cracker_effect = yes
            change_pc = pc_ringworld_habitable_damaged
        }
        else_if = {
            limit = { is_planet_class = pc_ringworld_tech }
            spawn_ringworld_cracker_effect = yes
            change_pc = pc_ringworld_tech_damaged
        }
        else_if = {
            limit = { is_planet_class = pc_ringworld_seam }
            spawn_ringworld_cracker_effect = yes
            change_pc = pc_ringworld_seam_damaged
        }
        else = {
            change_pc = pc_astral_scar
        }
    }
    every_system_planet = {
        limit = {
            exists = orbital_station
        }
        orbital_station = { dismantle = yes }
    }
    every_system_planet = {
        clear_deposits = yes
        clear_planet_modifiers = yes
        prevent_anomaly = yes
    }
    every_system_planet = {
        limit = { is_asteroid = yes }
        clear_deposits = yes
    }
    every_fleet_in_system = {
        limit = {
            NOR = {
                is_same_value = from
                # except Extradimensionals
                AND = {
                    exists = owner
                    owner = {
                        OR = {
                            is_country_type = portal_holder
                            is_country_type = extradimensional
                            is_country_type = extradimensional_2
                            is_country_type = extradimensional_3
                        }
                    }
                }
            }
        }
        if = {
            limit = {
                exists = event_target:crisis_country #i.e. not final destruction of all matter
                is_mobile = yes
            }
            set_mia = mia_return_home
        }
        else = {
            destroy_fleet = this
        }
    }
    every_system_megastructure = {
        set_ruined_megastructure = yes
    }
    star = {
        create_ambient_object = {
            type = "kaleidoscope_neutral"
            location = this
        }
        last_created_ambient_object = {
            set_ambient_object_flag = destroyed_system_effect
            set_location = {
                target = prev
                distance = 0
                angle = random
            }
        }
    }
}